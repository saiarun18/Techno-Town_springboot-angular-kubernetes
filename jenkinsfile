pipeline {
    
    agent any
    environment{
        VERSION = "${env.BUILD_ID}"
    }

    
    stages {
        stage('Download SC') {
            steps {
                git 'https://github.com/saiarun18/Techno-Town_springboot-angular-kubernetes.git'
            }
        }
        stage('Quality Gate Status Check'){
            
            agent {
                docker {
                image 'maven'
                args '-v $HOME/.m2:/root/.m2'
                }
            }
               
                  steps{
                      script{
                      withSonarQubeEnv('sonarserver') { 
                            sh 'mvn clean package sonar:sonar'
                       }
                      timeout(time: 1, unit: 'HOURS') {
                      def qg = waitForQualityGate()
                      if (qg.status != 'OK') {
                           error "Pipeline aborted due to quality gate failure: ${qg.status}"
                      }
                    }
		    sh "mvn clean install"
                  }
                }  
            }
            stage('Docker Image & Nexus Push'){
              
                steps{
                    script{
		        sh 'cp -r ../my_pjt_new@2/target .'
                        withCredentials([string(credentialsId: 'docker-pass', variable: 'nexus_pwd')]) {
                        sh '''
                           docker build -t 35.192.181.197:8083/spring:${VERSION} .
                           docker login -u admin -p $nexus_pwd 35.192.181.197:8083
                           docker push 35.192.181.197:8083/spring:${VERSION}
                           docker rmi 35.192.181.197:8083/spring:${VERSION}
                        '''
                        }
                        
                    }
                }
            }   
    }
}
